<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Esri.ArcGISRuntime.Toolkit.Controls"
    xmlns:primitives="using:Esri.ArcGISRuntime.Toolkit.Primitives">
    
    <!-- Default Legend Style-->
	<Style TargetType="local:Legend">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="IsTabStop" Value="False" />

		<!-- LegendItemTemplate = template for low level legend item : image + label-->
		<Setter Property="LegendItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<StackPanel Orientation="Horizontal" Margin="1">
						<Grid MinWidth="20" MinHeight="10">
							<Image Source="{Binding SymbolSwatch}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" />
						</Grid>
						<TextBlock Text="{Binding Label}" Margin="5,0,0,0" VerticalAlignment="Center" />
					</StackPanel>
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<!-- LayerLegendTemplate = template for a layer legend -->
		<Setter Property="LayerTemplate">
			<Setter.Value>
				<DataTemplate>
					<StackPanel Orientation="Horizontal" Margin="0,4">
						<ToolTipService.ToolTip>
							<StackPanel MaxWidth="400">
								<TextBlock FontWeight="Bold" Text="{Binding ParentLabel}" TextWrapping="Wrap" />
								<TextBlock FontWeight="Bold" Text="{Binding Label}" TextWrapping="Wrap" />
								<TextBlock Text="{Binding Description}" TextWrapping="Wrap" />
							</StackPanel>
						</ToolTipService.ToolTip>
						<TextBlock Text="{Binding Label}" FontWeight="Bold" VerticalAlignment="Center"/>
					</StackPanel>
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<!-- Optional MapLayerLegendTemplate (default is LayerLegendTemplate) = template for a map layer legend -->
		<!-- A busy indicator and a slider for layer opacity can make sense here-->
		<Setter Property="MapLayerTemplate">
			<Setter.Value>
				<DataTemplate>
					<StackPanel  Orientation="Horizontal" Margin="0,4">
						<ToolTipService.ToolTip>
							<StackPanel MaxWidth="400">
								<TextBlock FontWeight="Bold" Text="{Binding Label}" TextWrapping="Wrap" />
								<TextBlock Text="{Binding Description}" TextWrapping="Wrap" />
							</StackPanel>
						</ToolTipService.ToolTip>
						<TextBlock Text="{Binding Label}" FontWeight="Bold" VerticalAlignment="Center"/>
					</StackPanel>
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<!-- legend control template : here based on a itemscontrol-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:Legend">
					<ItemsControl				ItemsSource="{TemplateBinding LayerItemsSource}"
                                                Background="{TemplateBinding Background}"
                                                Foreground="{TemplateBinding Foreground}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Padding="{TemplateBinding Padding}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        >
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<StackPanel Orientation="Vertical" Margin="0,0,0,12">

									<!--Layer Item-->
									<ContentPresenter Content="{Binding}" ContentTemplate="{Binding Template}" />

									<!--Legend Items-->
									<ItemsControl ItemsSource="{Binding LegendItems}">
										<ItemsControl.ItemTemplate>
											<DataTemplate >
												<ContentPresenter Content="{Binding}" ContentTemplate="{Binding Template}" />
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>

								</StackPanel>
							</DataTemplate>

						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Attribution control style-->
	<Style TargetType="local:Attribution">
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="IsHitTestVisible" Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:Attribution">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<StackPanel>
							<ItemsControl ItemsSource="{TemplateBinding Items}" >
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding}" TextWrapping="Wrap"/>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</StackPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <!-- Default ScaleLine Style-->
    <Style TargetType="local:ScaleLine">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left " />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="TargetWidth" Value="200" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ScaleLine">
                    <Grid x:Name="LayoutRoot" Width="{TemplateBinding Width}">
                        <StackPanel HorizontalAlignment="Stretch" >                            
                            <StackPanel Orientation="Horizontal">                                
                                <Rectangle Width="{Binding Width, ElementName=MetricScaleLine}"/>
                                <TextBlock x:Name="MetricValue" Text="100" Foreground="{TemplateBinding Foreground}"/>
                                <TextBlock x:Name="MetricUnit" Text="m" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>                            
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="2" Fill="{TemplateBinding Foreground}" Height="5" />
                                <Rectangle Width="{Binding Width, ElementName=MetricScaleLine}"/>
                                <Rectangle Width="2" Fill="{TemplateBinding Foreground}" Height="5" />
                            </StackPanel>                            
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Fill="{TemplateBinding Foreground}" Height="2" Width="4"/>
                                <Grid>                                    
                                    <Rectangle Fill="{TemplateBinding Foreground}" Height="2" HorizontalAlignment="Left" 
										   Width="200" x:Name="MetricScaleLine" />                                    
                                    <Rectangle Fill="{TemplateBinding Foreground}" Height="2" HorizontalAlignment="Left" 
										   Width="200" x:Name="UsScaleLine" />
                                </Grid>
                            </StackPanel>                             
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="2" Fill="{TemplateBinding Foreground}" Height="5" />
                                <Rectangle Width="{Binding Width, ElementName=UsScaleLine}"/>
                                <Rectangle Width="2" Fill="{TemplateBinding Foreground}" Height="5" />
                            </StackPanel>                            
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="{Binding Width, ElementName=UsScaleLine}"/>
                                <TextBlock x:Name="UsValue" Text="USValue" Foreground="{TemplateBinding Foreground}"/>
                                <TextBlock x:Name="UsUnit" Text="UsUnit" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--FeatureDataForm Control Template-->
    <Style TargetType="local:FeatureDataForm">
        <Setter Property="Background"  Value="{StaticResource PhoneBackgroundColor}"/>
        <Setter Property="BorderBrush"  Value="{StaticResource PhoneForegroundBrush}"/>
        <Setter Property="BorderThickness"  Value="1"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="LabelStyle">
            <Setter.Value>
                <Style TargetType="TextBlock">
                    <Style.Setters>
                        <Setter Property="Margin" Value="15,5,0,0" />
                    </Style.Setters>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ContainerStyle">
            <Setter.Value>
                <Style TargetType="StackPanel">
                    <Style.Setters>
                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    </Style.Setters>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FeatureDataForm">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        Margin="{TemplateBinding Margin}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        >
                        <ScrollViewer 
                            HorizontalScrollBarVisibility="Disabled" 
                            VerticalScrollBarVisibility="Auto" >
                            <Grid x:Name="FeatureDataForm_ControlRoot" 
                              MinWidth="{TemplateBinding MinWidth}"
                              MinHeight="{TemplateBinding MinHeight}"
                              Width="{TemplateBinding Width}" 
                              Height="{TemplateBinding Height}"                              
                              />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--FeatureDataField Control Template-->
    <Style TargetType="local:FeatureDataField">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FeatureDataField">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        Margin="{TemplateBinding Margin}"
                        >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal"/>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Normal" GeneratedDuration="0:0:0.25" />
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderThickness="2" Padding="0" Margin="0">
                            <Border.BorderBrush>
                                <SolidColorBrush x:Name="ErrorBrush" Color="Transparent" />
                            </Border.BorderBrush>
                            <ContentControl x:Name="FeatureDataField_ContentControl" 
                                HorizontalContentAlignment="Stretch" 
                                VerticalContentAlignment="Stretch"
                                MinWidth="{TemplateBinding MinWidth}"
                                Width="{TemplateBinding Width}" 
                                MaxWidth="{TemplateBinding MaxWidth}"
                                Height="{TemplateBinding Height}" FontFamily="Portable User Interface"                                                
                                />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectorTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ComboBox ItemsSource="{Binding Items}" 
                              SelectedItem="{Binding Value, Mode=TwoWay}"                              
                              DisplayMemberPath="Value"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="InputTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBox x:Name="InputTextBox" Text="{Binding Value, Mode=TwoWay}" 
                             local:FeatureDataField.TextBoxChangedListener="{Binding ElementName=InputTextBox}"
                             VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <TextBox.Template>
                            <ControlTemplate TargetType="TextBox">
                                <Grid Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal">
												<Storyboard>
													<DoubleAnimation Duration="0" To="{ThemeResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
													<DoubleAnimation Duration="0" To="{ThemeResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="MouseOver"/>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
														<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBackgroundThemeBrush}"/>
													</ObjectAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
														<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBorderThemeBrush}"/>
													</ObjectAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
														<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}"/>
													</ObjectAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
														<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}"/>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="ReadOnly">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MainBorder">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ReadonlyBorder">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ReadonlyBorder">
														<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
														<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
											<VisualState x:Name="Focused">
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
														<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextSelectionHighlightColorThemeBrush}"/>
													</ObjectAnimationUsingKeyFrames>
													<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PlaceholderTextContentPresenter"/>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
														<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxFocusedBackgroundThemeBrush}"/>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Unfocused"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ValidationStates">
                                            <VisualState x:Name="ValidState"/>
                                            <VisualState x:Name="InvalidUnfocusedState">
                                                <Storyboard>
                                                    <ColorAnimation Duration="0" To="Red" Storyboard.TargetName="ErrorBrush" Storyboard.TargetProperty="Color" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="InvalidFocusedState">
                                                <Storyboard>
                                                    <ColorAnimation Duration="0" To="Red" Storyboard.TargetName="ErrorBrush" Storyboard.TargetProperty="Color" />
                                                    <DoubleAnimation Storyboard.TargetName="ValidationFlyout" Storyboard.TargetProperty="Opacity"
                                                                     From="0.0" To="1.0" Duration="0:0:1" />
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationFlyout" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
									<Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Margin="{TemplateBinding BorderThickness}"/>
									<Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
									<ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Margin="{ThemeResource TextControlHeaderMarginThemeThickness}" Style="{StaticResource HeaderContentPresenterStyle}"/>
                                    <Border BorderThickness="{TemplateBinding BorderThickness}" >
                                        <Border.BorderBrush>
                                            <SolidColorBrush x:Name="ErrorBrush" Color="Transparent" />
                                        </Border.BorderBrush>
                                        <Grid>
                                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" MinHeight="{ThemeResource TextControlThemeMinHeight}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                                            <ContentControl x:Name="PlaceholderTextContentPresenter" Content="{TemplateBinding PlaceholderText}" Foreground="{ThemeResource TextBoxPlaceholderTextThemeBrush}" FontSize="{ThemeResource ContentControlFontSize}" IsTabStop="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                        </Grid>                                        
                                    </Border>
                                    <Grid x:Name="ValidationFlyout" Visibility="Collapsed" Grid.Row="1" Margin="5,2,12,5">
                                        <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5"/>
                                        <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4"/>
                                        <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3"/>
                                        <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2"/>
                                        <Border Background="#FFDC000C" CornerRadius="2"/>
                                        <Border CornerRadius="10">
                                            <TextBlock x:Name="ErrorTextBlock"                                                
                                                HorizontalAlignment="Left"
                                                UseLayoutRounding="false" 
                                                Foreground="White" 
                                                Margin="8,4,8,4"                                                 
                                                TextWrapping="Wrap" 
                                                Text="{Binding ErrorMessage}"/>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </TextBox.Template>
                    </TextBox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ReadOnlyTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBox Text="{Binding Value, Mode=OneWay}" IsReadOnly="True" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TemplatePicker">
        <Setter Property="Background"  Value="{StaticResource PhoneBackgroundColor}"/>
        <Setter Property="BorderBrush"  Value="{StaticResource PhoneForegroundBrush}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Command="{Binding Command}" CommandParameter="{Binding}"
                                 Padding="0" Margin="0" >
                            <Viewbox Width="50" Height="50">
                                <primitives:SymbolDisplay DefaultWidth="25" DefaultHeight="25" MinHeight="25" MinWidth="25"
                                                     Symbol="{Binding Symbol}"
                                                     GeometryType="{Binding GeometryType}" />
                            </Viewbox>
                        </Button>
                        <TextBlock Text="{Binding FeatureTemplate.Name}" TextWrapping="Wrap" Grid.Column="1" Margin="5,0,0,0"
                                   VerticalAlignment="Center"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TemplatePicker">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                        >
                        <ItemsControl x:Name="TemplateItems" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      ItemTemplate="{TemplateBinding ItemTemplate}"
                                      ItemsPanel="{TemplateBinding ItemsPanel}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Default SymbolDisplay Style-->
    <Style TargetType="primitives:SymbolDisplay">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:SymbolDisplay">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Image x:Name="Image" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

    
