<Project>

  <PropertyGroup>
    <ArcGISRuntimeToolkitPackageVersion Condition="'$(ArcGISRuntimeToolkitPackageVersion)'==''">200.7.0</ArcGISRuntimeToolkitPackageVersion>
    <ArcGISRuntimePackageVersion Condition="'$(ArcGISRuntimePackageVersion)'==''">200.7.0</ArcGISRuntimePackageVersion>

    <!--Common package properties-->
    <Authors>Esri Inc.</Authors>
    <PackageIconUrl>http://links.esri.com/dotnetsdklogo</PackageIconUrl>
    <PackageIcon>icon.png</PackageIcon>
    <PackageProjectUrl>https://github.com/Esri/arcgis-maps-sdk-dotnet-toolkit</PackageProjectUrl>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>    
    <PackageReleaseNotes>v$(ArcGISRuntimeToolkitPackageVersion): https://github.com/Esri/arcgis-maps-sdk-dotnet-toolkit/releases/tag/v$(ArcGISRuntimeToolkitPackageVersion)</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/Esri/arcgis-maps-sdk-dotnet-toolkit</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Copyright>Copyright Â© 2014-$([System.DateTime]::Now.ToString('yyyy')) Esri.</Copyright>

    <DefaultLanguage>en-US</DefaultLanguage>
    <LangVersion>11</LangVersion>

    <!--Project type identifiers-->
    <IsSampleProject>$(MSBuildProjectName.Contains('.Samples.'))</IsSampleProject>
    <IsSampleProject Condition="'$(IsSampleProject)'!='true'">$(MSBuildProjectName.Contains('.SampleApp.'))</IsSampleProject>
    <IsTestProject>$(MSBuildProjectName.Contains('.Test'))</IsTestProject>
    <IsTemplateProject>$(MSBuildProjectDirectory.Contains('ProjectTemplates'))</IsTemplateProject>
    <IsAnalyzerProject>$(MSBuildProjectDirectory.Contains('Analyzers'))</IsAnalyzerProject>
    
    <IsToolkitLibrary Condition="'$(IsTestProject)' == 'true' or '$(IsSampleProject)' == 'true' or $(IsTemplateProject) == 'true' or $(IsAnalyzerProject) == 'true'">false</IsToolkitLibrary>
    <IsToolkitLibrary Condition="'$(IsTestProject)' != 'true' and '$(IsSampleProject)' != 'true' and $(IsTemplateProject) != 'true' and $(IsAnalyzerProject) != 'true'">true</IsToolkitLibrary>
  </PropertyGroup>

  <!--Framework versions-->
  <PropertyGroup>
    <ArcGISRuntime_MinimumSupportedWindowsBuild Condition="'$(ArcGISRuntime_MinimumSupportedWindowsBuild)'==''">19041</ArcGISRuntime_MinimumSupportedWindowsBuild>
    <WindowsSDKTargetBuild Condition="'$(WindowsSDKTargetBuild)'==''">19041</WindowsSDKTargetBuild>
    <UWPTargetPlatformVersion>10.0.$(WindowsSDKTargetBuild).0</UWPTargetPlatformVersion>
    <UWPTargetPlatformMinVersion>10.0.$(ArcGISRuntime_MinimumSupportedWindowsBuild).0</UWPTargetPlatformMinVersion>
    <DotNetTargetFramework>net472</DotNetTargetFramework>
    <UWPTargetFramework>uap10.0.$(WindowsSDKTargetBuild)</UWPTargetFramework>
    <NetWindowsTargetFramework Condition="'$(NetWindowsTargetFramework)'==''">net8.0-windows10.0.$(WindowsSDKTargetBuild).0</NetWindowsTargetFramework>
    <NETMauiTarget Condition="'$(NETMauiTarget)'==''">net9.0</NETMauiTarget>
    <NetMauiWindowsTargetFramework Condition="'$(NetMauiWindowsTargetFramework)'==''">$(NETMauiTarget)-windows10.0.$(WindowsSDKTargetBuild).0</NetMauiWindowsTargetFramework>
    <NetAndroidTargetFramework Condition="'$(NetAndroidTargetFramework)'==''">$(NETMauiTarget)-android35.0</NetAndroidTargetFramework>
    <NetCatalystTargetFramework Condition="'$(NetCatalystTargetFramework)'==''">$(NETMauiTarget)-maccatalyst18.1</NetCatalystTargetFramework>
    <NetiOSTargetFramework Condition="'$(NetiOSTargetFramework)'==''">$(NETMauiTarget)-ios18.1</NetiOSTargetFramework>  
    <MauiVersion Condition="'$(MauiVersion)'==''">8.0.3</MauiVersion>
    <WinAppSDKVersion Condition="'$(WinAppSDKVersion)'==''">1.6.240923002</WinAppSDKVersion>
  </PropertyGroup>
  <PropertyGroup>
    <DisableImplicitNamespaceImports>true</DisableImplicitNamespaceImports>

    <!--Output paths-->
    <PackageOutputPath>$(MSBuildThisFileDirectory)..\Output\NuGet\$(Configuration)\</PackageOutputPath>

    <NoWarn>$(NoWarn);NU5105</NoWarn>
	
    <!-- Set this to a Toolkit NuGet version like '100.10.0' to have samples use nuget packages 
         instead of project references. Leave blank for project reference. -->
    <UseNugetPackage></UseNugetPackage>
  </PropertyGroup>

  <Choose>
    <When Condition="$(IsToolkitLibrary)" >      
      <PropertyGroup>
        <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)Esri.ArcGISRuntime.Toolkit.ruleset</CodeAnalysisRuleSet>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <OutputPath>$(MSBuildThisFileDirectory)..\Output\$(MSBuildProjectName)\$(Configuration)\</OutputPath>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
      </PropertyGroup>
      
      <ItemGroup Condition="Exists('$(MSBuildThisFileDirectory)../.git') AND '$(OS)' == 'Windows_NT'">
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
      </ItemGroup>
      <ItemGroup>
        <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" />
      </ItemGroup>
    </When>
  </Choose>

  <PropertyGroup>
    <NerdbankGitVersioningVersion>3.0.26</NerdbankGitVersioningVersion>
  </PropertyGroup>

  <ItemGroup Condition="'$(VersionOverride)'!='true' AND $([MSBuild]::IsOSPlatform('windows'))">
    <PackageReference Include="Nerdbank.GitVersioning" Version="3.0.26" PrivateAssets="all" />
  </ItemGroup>
  
  <ItemGroup Condition="$(IsToolkitLibrary)">
    <None Include="$(MSBuildThisFileDirectory)..\build\icon.png" Pack="true" PackagePath="\">
      <Link>icon.png</Link>
      <Visible>false</Visible>
    </None>
    <None Include="$(MSBuildThisFileDirectory)\THIRD-PARTY-NOTICES.TXT" Pack="true" PackagePath="\">
      <Link>THIRD-PARTY-NOTICES.TXT</Link>
      <Visible>false</Visible>
    </None>
  </ItemGroup>

    <!--
    // This task disable doc warnings in the auto-generated XamlTypeInfo.g.cs file,
    // and also hides the public class from intellisense.
    -->

    <UsingTask TaskName="XamlTypeInfoBuildTask" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <InputFilename ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Reference Include="System.Core" />
            <Using Namespace="System" />
            <Using Namespace="Microsoft.Build.Framework" />
            <Using Namespace="Microsoft.Build.Utilities" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                //Note: If this task returns 'false' it will break the shared project manager project picker and intellisense.
                //so we always return true.
                try {
                    if (!System.IO.File.Exists(InputFilename)) 
                    {
                        return true; 
                    }
                    string code = System.IO.File.ReadAllText(InputFilename);

                    if (code.StartsWith("#pragma warning disable 1591")) //Already modified 
                        return true; 
                    int idx = code.IndexOf("[System.CodeDom.Compiler.GeneratedCodeAttribute"); 
                    if (idx < 0) 
                    {
                        return true; 
                    }
                    string insert = "[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n    "; 
                    code = "#pragma warning disable 1591\n" + code.Substring(0, idx) + insert + code.Substring(idx) + 
                        "#pragma warning restore 1591\n"; 
                    System.IO.File.WriteAllText(InputFilename, code); 
                    return true; 
                }
                catch (Exception ex) {
                    ex = new Exception("XamlTypeInfoBuildTask: " + ex.Message, ex);
                    Log.LogErrorFromException(ex);
                    return false;
                }
            ]]>
            </Code>
        </Task>
    </UsingTask>
    <Target Name="XamlTypeInfoBuildTask" Condition="'$(TargetFramework)' == '$(UWPTargetFramework)' AND '$(DesignTimeBuild)' != 'true'"
                    AfterTargets="MarkupCompilePass2"
                    BeforeTargets="CoreCompile">
        <XamlTypeInfoBuildTask InputFilename="$(IntermediateOutputPath)\XamlTypeInfo.g.cs" />
    </Target>

	
    <Import Project="$(MSBuildThisFileDirectory)..\build\Signing.targets" />

</Project>
