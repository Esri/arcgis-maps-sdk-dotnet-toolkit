<Project>

  <PropertyGroup>
    <ArcGISRuntimeToolkitPackageVersion Condition="'$(ArcGISRuntimeToolkitPackageVersion)'==''">100.6.0</ArcGISRuntimeToolkitPackageVersion>

    <!--Common package properties-->
    <Authors>Esri Inc.</Authors>
    <PackageIconUrl>http://links.esri.com/dotnetsdklogo</PackageIconUrl>
    <PackageProjectUrl>https://github.com/Esri/arcgis-toolkit-dotnet</PackageProjectUrl>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>    
    <PackageReleaseNotes>v$(ArcGISRuntimeToolkitPackageVersion): https://github.com/Esri/arcgis-toolkit-dotnet/releases/tag/v$(ArcGISRuntimeToolkitPackageVersion)</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/Esri/arcgis-toolkit-dotnet</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <Copyright>Copyright Â© 2014-2019 Esri.</Copyright>

    <DefaultLanguage>en-US</DefaultLanguage>
    <LangVersion>7.2</LangVersion>

    <!--Project type identifiers-->
    <IsSampleProject>$(MSBuildProjectName.Contains('.Samples.'))</IsSampleProject>
    <IsTestProject>$(MSBuildProjectName.Contains('.Test'))</IsTestProject>
    <IsToolkitLibrary Condition="'$(IsTestProject)' == 'true' or '$(IsSampleProject)' == 'true'">false</IsToolkitLibrary>
    <IsToolkitLibrary Condition="'$(IsTestProject)' != 'true' and '$(IsSampleProject)' != 'true'">true</IsToolkitLibrary>

    <!--Framework versions-->
    <UWPTargetPlatformVersion>10.0.16299.0</UWPTargetPlatformVersion>
    <UWPTargetPlatformMinVersion>10.0.16299.0</UWPTargetPlatformMinVersion>
    <AndroidTargetFramework>monoandroid81</AndroidTargetFramework>
    <iOSTargetFramework>xamarinios10</iOSTargetFramework>
    <DotNetTargetFramework>net461</DotNetTargetFramework>
    <UWPTargetFramework>uap10.0.16299</UWPTargetFramework>

    <ArcGISRuntimePackageVersion Condition="'$(ArcGISRuntimePackageVersion)'==''">100.6</ArcGISRuntimePackageVersion>
    <XamarinFormsPackageVersion Condition="'$(XamarinFormsPackageVersion)'==''">4.1.0.555618</XamarinFormsPackageVersion>

    <!--Output paths-->
    <PackageOutputPath>$(MSBuildThisFileDirectory)..\Output\NuGet\$(Configuration)\</PackageOutputPath>

  </PropertyGroup>

  <Choose>
    <When Condition="$(IsToolkitLibrary)" >      
      <PropertyGroup>
        <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)Esri.ArcGISRuntime.Toolkit.ruleset</CodeAnalysisRuleSet>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <OutputPath>$(MSBuildThisFileDirectory)..\Output\$(MSBuildProjectName)\$(Configuration)\</OutputPath>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
      </PropertyGroup>
      <ItemGroup Condition="Exists('$(MSBuildThisFileDirectory)..\.git')">
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta-63127-02" PrivateAssets="All" />
      </ItemGroup>
      <ItemGroup>
        <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" />
      </ItemGroup>
    </When>
  </Choose>

  <PropertyGroup>
    <NerdbankGitVersioningVersion>2.2.13</NerdbankGitVersioningVersion>
  </PropertyGroup>

  <ItemGroup Condition="'$(VersionOverride)'!='true'">
    <PackageReference Include="Nerdbank.GitVersioning" Version="2.3.138" PrivateAssets="all" />
  </ItemGroup>

   <!-- https://github.com/NuGet/Home/issues/4337 -->
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' == 'true' ">
    <Import Project="$(UserProfile)\.nuget\packages\nerdbank.gitversioning\$(NerdbankGitVersioningVersion)\buildCrossTargeting\Nerdbank.GitVersioning.targets"
            Condition="Exists('$(UserProfile)\.nuget\packages\nerdbank.gitversioning\$(NerdbankGitVersioningVersion)\buildCrossTargeting\Nerdbank.GitVersioning.targets')" />
  </ImportGroup>
  <Target Name="FixUpVersion"
          BeforeTargets="_GenerateRestoreProjectSpec"
          DependsOnTargets="GetBuildVersion"
          Condition=" '$(NerdbankGitVersioningTasksPath)' != '' " />


    <!--
    // This task disable doc warnings in the auto-generated XamlTypeInfo.g.cs file,
    // and also hides the public class from intellisense.
    -->

    <UsingTask TaskName="XamlTypeInfoBuildTask" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <InputFilename ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Reference Include="System.Core" />
            <Using Namespace="System" />
            <Using Namespace="Microsoft.Build.Framework" />
            <Using Namespace="Microsoft.Build.Utilities" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                //Note: If this task returns 'false' it will break the shared project manager project picker and intellisense.
                //so we always return true.
                try {
                    if (!System.IO.File.Exists(InputFilename)) 
                    {
                        return true; 
                    }
                    string code = System.IO.File.ReadAllText(InputFilename);

                    if (code.StartsWith("#pragma warning disable 1591")) //Already modified 
                        return true; 
                    int idx = code.IndexOf("[System.CodeDom.Compiler.GeneratedCodeAttribute"); 
                    if (idx < 0) 
                    {
                        return true; 
                    }
                    string insert = "[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]\n    "; 
                    code = "#pragma warning disable 1591\n" + code.Substring(0, idx) + insert + code.Substring(idx) + 
                        "#pragma warning restore 1591\n"; 
                    System.IO.File.WriteAllText(InputFilename, code); 
                    return true; 
                }
                catch (Exception ex) {
                    ex = new Exception("XamlTypeInfoBuildTask: " + ex.Message, ex);
                    Log.LogErrorFromException(ex);
                    return false;
                }
            ]]>
            </Code>
        </Task>
    </UsingTask>
    <Target Name="XamlTypeInfoBuildTask" Condition="'$(TargetFramework)' == '$(UWPTargetFramework)' AND '$(DesignTimeBuild)' != 'true'"
                    AfterTargets="MarkupCompilePass2"
                    BeforeTargets="CoreCompile">
        <XamlTypeInfoBuildTask InputFilename="$(IntermediateOutputPath)\XamlTypeInfo.g.cs" />
    </Target>
</Project>
