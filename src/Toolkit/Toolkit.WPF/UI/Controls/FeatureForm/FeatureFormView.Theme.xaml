<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:internal="clr-namespace:Esri.ArcGISRuntime.Toolkit.Internal"
    xmlns:controls="clr-namespace:Esri.ArcGISRuntime.Toolkit.UI.Controls"
    xmlns:converter="using:Esri.ArcGISRuntime.Toolkit.Internal"
    xmlns:primitives="clr-namespace:Esri.ArcGISRuntime.Toolkit.Primitives">

    <SolidColorBrush x:Key="FeatureFormAccentBrush" Color="#007AC2" />
    <Thickness x:Key="FeatureFormElementInputMargin">0,0,0,5</Thickness>
    <internal:VisibilityConverter x:Key="FeatureFormViewVisibilityConverter"/>
    <Style TargetType="TextBlock" x:Key="FeatureFormViewHeaderStyle">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style TargetType="TextBlock" x:Key="FeatureFormViewTitleStyle">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style TargetType="TextBlock" x:Key="FeatureFormViewCaptionStyle">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style TargetType="{x:Type primitives:SwitchFormInputView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:SwitchFormInputView}">
                    <StackPanel Orientation="Horizontal" Margin="-4" x:Name="Root" HorizontalAlignment="Left">
                        <Grid HorizontalAlignment="Left" Margin="4" Width="30" Height="15" Cursor="Hand">
                            <Border CornerRadius="7.5" Background="LightGray" x:Name="SwitchBack" />
                            <Ellipse Width="15" Fill="White" Stroke="Gray" HorizontalAlignment="Left" x:Name="SwitchThumb" />
                        </Grid>
                        <TextBlock DataContext="{TemplateBinding Element}" Text="{Binding Input.OnValue.Name}" VerticalAlignment="Center" Margin="5,0" Visibility="Collapsed" x:Name="OnDisplayValue" />
                        <TextBlock DataContext="{TemplateBinding Element}" Text="{Binding Input.OffValue.Name}" VerticalAlignment="Center" Margin="5,0" Visibility="Visible" x:Name="OffDisplayValue" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="SwitchThumb" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="SwitchBack" Property="Background" Value="LightGray"/>
                            <Setter TargetName="OnDisplayValue" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="OffDisplayValue" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="SwitchThumb" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="SwitchBack" Property="Background" Value="{StaticResource FeatureFormAccentBrush}"/>
                            <Setter TargetName="OnDisplayValue" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="OffDisplayValue" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Root" Property="Background" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type primitives:ComboBoxFormInputView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:ComboBoxFormInputView}">
                    <ComboBox x:Name="Selector" IsEnabled="{TemplateBinding IsEnabled}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type primitives:TextFormInputView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:TextFormInputView}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="InputError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ErrorInfo" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ErrorBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InputValid">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ErrorInfo" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ErrorBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,-17,0,0" x:Name="CharacterCountPanel">
                            <TextBlock Text="{Binding Text.Length, ElementName=TextInput}" />
                            <TextBlock Text="/" />
                            <TextBlock Text="{Binding MaxLength, ElementName=TextInput}" />
                        </StackPanel>
                        <TextBox IsEnabled="{TemplateBinding IsEnabled}" BorderThickness="0" x:Name="TextInput" MaxLines="{TemplateBinding MaxLines}" MinLines="{TemplateBinding MinLines}" />

                        <Border x:Name="ErrorBorder" BorderThickness="1" BorderBrush="Red" Visibility="Collapsed" />
                        <TextBlock Text="!" Background="Transparent" Width="10" Foreground="Red" Visibility="Collapsed" HorizontalAlignment="Right" x:Name="ErrorInfo" />
                        <Button Grid.Column="1" Content="&#xec5a;" FontFamily="Segoe MDL2 Assets" Visibility="Collapsed" x:Name="BarcodeScannerButton" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowCharacterCount" Value="false">
                            <Setter TargetName="CharacterCountPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ShowCharacterCount" Value="true">
                            <Setter TargetName="CharacterCountPanel" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsBarcodeScannerEnabled" Value="false">
                            <Setter TargetName="BarcodeScannerButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsBarcodeScannerEnabled" Value="true">
                            <Setter TargetName="BarcodeScannerButton" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type primitives:FieldFormElementView}" >
        <Setter Property="Margin" Value="{StaticResource FeatureFormElementInputMargin}" />
        <Setter Property="ComboBoxFormInputTemplate">
            <Setter.Value>
                <DataTemplate>
                    <primitives:ComboBoxFormInputView Element="{Binding}" IsEnabled="{Binding IsEditable}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RadioButtonsFormInputTemplate">
            <!-- TODO -->
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl ItemsSource="{Binding Input.CodedValues}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <RadioButton Content="{Binding Name}" IsEnabled="{Binding IsEditable}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SwitchFormInputTemplate">
            <Setter.Value>
                <DataTemplate>
                    <primitives:SwitchFormInputView Element="{Binding}" IsEnabled="{Binding IsEditable}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextAreaFormInputTemplate">
            <Setter.Value>
                <DataTemplate>
                    <primitives:TextFormInputView ShowCharacterCount="true" Element="{Binding}" MaxLines="4" MinLines="4" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextBoxFormInputTemplate">
            <Setter.Value>
                <DataTemplate>
                    <primitives:TextFormInputView ShowCharacterCount="false" Element="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BarcodeScannerFormInputTemplate">
            <Setter.Value>
                <DataTemplate>
                    <primitives:TextFormInputView ShowCharacterCount="false" IsBarcodeScannerEnabled="true" Element="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DateTimePickerFormInputTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!-- TODO -->
                    <DatePicker SelectedDate="{Binding Value, Mode=OneWay}" IsEnabled="{Binding IsEditable}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:FieldFormElementView}">
                    <StackPanel>
                        <TextBlock Text="{Binding Label}" Style="{StaticResource FeatureFormViewTitleStyle}"/>
                        <ContentControl Margin="0,3" Foreground="Gray" Content="{Binding}" x:Name="FieldInput" ToolTip="{Binding Hint}" />
                        <TextBlock Text="{Binding Description}" Visibility="{Binding Description, Converter={StaticResource FeatureFormViewVisibilityConverter}}" Opacity=".7" Style="{StaticResource FeatureFormViewCaptionStyle}" />
                        <TextBlock Foreground="Red" x:Name="ErrorLabel" Visibility="{Binding Text, ElementName=ErrorLabel, Converter={StaticResource FeatureFormViewVisibilityConverter}}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type controls:FeatureFormView}" >
     <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:FeatureFormView}">
          <Border Background="{TemplateBinding Background}"
                   BorderBrush="{TemplateBinding BorderBrush}"
                   BorderThickness="{TemplateBinding BorderThickness}"
                   Padding="{TemplateBinding Padding}"
                   Margin="{TemplateBinding Margin}"
                   MinWidth="{TemplateBinding MinWidth}"
                   MaxWidth="{TemplateBinding MaxWidth}">
            <Grid DataContext="{TemplateBinding FeatureForm}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
                <TextBlock Text="{Binding Title}" Style="{StaticResource FeatureFormViewHeaderStyle}"
                         Visibility="{Binding Title, Converter={StaticResource FeatureFormViewVisibilityConverter}}" />
                <ScrollViewer VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"  Grid.Row="1" x:Name="FeatureFormContentScrollViewer">
                    <primitives:FormElementItemsControl ItemsSource="{Binding Elements}" Margin="0,10" x:Name="ItemsView">
                        <primitives:FormElementItemsControl.FieldFormElementTemplate>
                            <DataTemplate>
                                <primitives:FieldFormElementView Element="{Binding}" FeatureForm="{Binding FeatureForm, RelativeSource={RelativeSource AncestorType=controls:FeatureFormView}}"
                                                                 Visibility="{Binding IsVisible, Converter={StaticResource FeatureFormViewVisibilityConverter}}" />
                            </DataTemplate>
                        </primitives:FormElementItemsControl.FieldFormElementTemplate>
                        <primitives:FormElementItemsControl.GroupFormElementTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="Black" Visibility="{Binding IsVisible, Converter={StaticResource FeatureFormViewVisibilityConverter}}">
                                    <StackPanel>
                                        <TextBlock Text="{Binding Label}" Visibility="{Binding Label, Converter={StaticResource FeatureFormViewVisibilityConverter}}" Style="{StaticResource FeatureFormViewTitleStyle}" />
                                        <TextBlock Text="{Binding Description}" Visibility="{Binding Description, Converter={StaticResource FeatureFormViewVisibilityConverter}}" Style="{StaticResource FeatureFormViewCaptionStyle}" />
                                        <primitives:FormElementItemsControl ItemsSource="{Binding FormElements}" Margin="0,10" />
                                    </StackPanel>
                                 </Border>
                            </DataTemplate>
                        </primitives:FormElementItemsControl.GroupFormElementTemplate>
                    </primitives:FormElementItemsControl>
                </ScrollViewer>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
