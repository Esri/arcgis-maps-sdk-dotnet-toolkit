<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
 
  <!-- Signing outputs -->
  <PropertyGroup>
    <CertificateTimeStampService>http://timestamp.digicert.com</CertificateTimeStampService>
    <SignToolPath>$(MSBuildProgramFiles32)\Windows Kits\10\App Certification Kit\signtool.exe</SignToolPath>
    <SignToolPath Condition="!Exists($(SignToolPath))">$(MSBuildProgramFiles32)\Windows Kits\10\bin\x64\signtool.exe</SignToolPath>
    <SignToolPath Condition="!Exists($(SignToolPath))">$(MSBuildProgramFiles32)\Windows Kits\10\bin\10.0.22000.0\x64\signtool.exe</SignToolPath>
    <SignToolPath Condition="!Exists($(SignToolPath))">$(MSBuildProgramFiles32)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe</SignToolPath>
    <SignToolPath Condition="!Exists($(SignToolPath))">$(WindowsSDK80Path)bin\x64\signtool.exe</SignToolPath>
    <SignToolPath Condition="!Exists($(SignToolPath))">signtool.exe</SignToolPath> <!-- fallback to use PATH environment -->
    
    <CodeSignCertificateStore Condition="'$(CodeSignCertificateStore)'==''">LocalMachine</CodeSignCertificateStore>
    <SignAssemblyCommand>"$(SignToolPath)" sign /fd SHA256 /sha1 $(THUMBPRINT_SHA1) /sm /tr $(CertificateTimeStampService) /td SHA256</SignAssemblyCommand>
    <NuGetExePath>$(MSBuildThisFileDirectory)..\.tools\NuGet.exe</NuGetExePath>
    <SignNugetCommand>--certificate-fingerprint $(THUMBPRINT_SHA256) --certificate-store-name My --certificate-store-location $(CodeSignCertificateStore) --timestamper $(CertificateTimeStampService) --overwrite</SignNugetCommand>
  </PropertyGroup>
  
  <Target Name="SignAssembly" Condition="'$(THUMBPRINT_SHA1)' != ''" BeforeTargets="CopyFilesToOutputDirectory" DependsOnTargets="ComputeIntermediateSatelliteAssemblies"> 
    <ItemGroup>
      <FilesToSign Include="@(IntermediateAssembly)" />
      <FilesToSign Include="@(IntermediateRefAssembly)" />
      <FilesToSign Include="@(IntermediateSatelliteAssembliesWithTargetPath)" />
    </ItemGroup>
    <ItemGroup>
      <FilesToSignFiltered Include="@(FilesToSign)" Condition="Exists(%(FilesToSign.Identity))" />
      <FilesToSignFiltered Condition="'@(FilesToSignFiltered->Count())' == 0" Include="$(TargetPath)" /> <!-- used by C++ projects -->
    </ItemGroup>
    <Exec Condition="'@(FilesToSignFiltered->Count())' > 0" Command="$(SignAssemblyCommand) &quot;%(FilesToSignFiltered.Identity)&quot;"
          WorkingDirectory="$(ProjectDir)" EchoOff="true" />
  </Target>
  
  <Target Name="SignNuGet" Condition="'$(THUMBPRINT_SHA256)' != '' AND '$(IsPackable)'=='true'" AfterTargets="Pack">
   <PropertyGroup>
      <NugetPackageFileName>$(PackageOutputPath)\$(PackageId).$(PackageVersion).nupkg</NugetPackageFileName>
      <SNugetPackageFileName>$(PackageOutputPath)\$(PackageId).$(PackageVersion).snupkg</SNugetPackageFileName>
   </PropertyGroup>
    <Exec Command="$(DOTNET_HOST_PATH) nuget sign &quot;$(NugetPackageFileName)&quot; $(SignNugetCommand)" />
    <Exec Command="$(DOTNET_HOST_PATH) nuget sign &quot;$(SNugetPackageFileName)&quot; $(SignNugetCommand)" />
  </Target> 

</Project>
